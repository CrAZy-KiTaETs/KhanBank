import Head from "next/head";
import KinoboxPlayer from "./KinoboxPlayer";
import { useRef, useEffect, useState } from "react";

import { useRouter } from "next/router";
import { useGetFilmByIdQuery } from "@/api/kinoPage/kinoApi";

export default function movie() {
  const router = useRouter();
  const queryParams = router.query;
  const { data, isLoading } = useGetFilmByIdQuery(queryParams.id);

  const [socket, setSocket] = useState(null);

  useEffect(() => {
    const soket = new WebSocket("ws://localhost:5000/");
    // –ö–æ–≥–¥–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ
    soket.onopen = () => {
      console.log("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
    };

    // –ö–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
    soket.onmessage = (event) => {
      const res = event.data;
      const data = JSON.parse(res);
      console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ", data);
      if (data.event === "player") {
        playerHandler({ player: data.play, time: data.time });
      }
    };

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–∫–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setSocket(soket);

    // const roomId = queryParams.roomId

    // if (roomId) {
    //   soket.send("")
    // }

    // –û—á–∏—Å—Ç–∫–∞ —Å–æ–∫–µ—Ç–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      soket.close();
    };
  }, []);

  function playerHandler({ player, time }) {
    const iframe = document.querySelector("iframe");
    iframe.contentWindow.postMessage({ api: player, time: time }, "*");
  }

  function pausePlayer() {
    const iframe = document.querySelector("iframe");
    iframe.contentWindow.postMessage({ api: "pause" }, "*");
  }

  function playPlayer() {
    const iframe = document.querySelector("iframe");
    iframe.contentWindow.postMessage({ api: "play" }, "*");
  }

  function timePlayer() {
    const iframe = document.querySelector("iframe");
    iframe.contentWindow.postMessage({ api: "seek", time: 200 }, "*");
  }

  const playerListener = (event) => {
    switch (event.data.event) {
      case "resumed":
        console.log("üöÄ:", "–ó–ê–ü–£–©–ï–ù");
        socket.send(
          JSON.stringify({
            message: "–ü–ª–µ–µ—Ä –∑–∞–ø—É—â–µ–Ω",
            event: "player",
            roomId: 1,
            userName: "React 1",
            play: "play",
            time: event.data.time,
          })
        );

        break;
      case "pause":
        console.log("üöÄ:", "–°–¢–û–ü");
        socket.send(
          JSON.stringify({
            message: "–ü–ª–µ–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
            event: "player",
            roomId: 1,
            userName: "React 1",
            play: "pause",
            time: event.data.time,
          })
        );

        break;

      case "seek":
        console.log("üöÄ:", "–ü–ï–†–ï–ú–û–¢–ö–ê", event.data.time);
        socket.send(
          JSON.stringify({
            message: "–ü–ª–µ–µ—Ä –ø–µ—Ä–µ–º–æ—Ç–∞–Ω",
            event: "player",
            roomId: 1,
            userName: "React 1",
            play: "seek",
            time: event.data.time,
          })
        );
        break;
    }

    // if (socket && socket.readyState === WebSocket.OPEN) {
    //   socket.send(
    //     JSON.stringify({
    //       message: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ä–µ–∞–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1",
    //       roomId: 1,
    //       userName: "React 1",
    //       play: play,
    //     })
    //   );
    // } else {
    //   console.log("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
    // }
  };

  if (isLoading) return <div>loadin</div>;

  window.addEventListener("message", playerListener);

  return (
    <>
      <Head>
        <title>KinoWatch - —Å–º–æ—Ç—Ä–∏ —Ñ–∏–ª—å–º—ã —Å –¥—Ä—É–∑—å—è–º–∏! </title>
      </Head>
      <main>
        –°–ú–û–¢–†–Æ –§–ò–õ–¨–ú–´
        <button onClick={() => playerHandler(true)}></button>
        <button onClick={() => pausePlayer()}>STOP PLAYER</button>
        <button onClick={() => playPlayer()}>PLAY PLAYER</button>
        <KinoboxPlayer kpId={queryParams.id} posterUrl={data.posterUrl} />
      </main>
    </>
  );
}
